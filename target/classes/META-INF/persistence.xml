<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.2" xmlns="http://xmlns.jcp.org/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_2.xsd">
    <persistence-unit name="hello">
        <properties>
            <!-- 필수 속성 -->
            <property name="jakarta.persistence.jdbc.driver" value="org.h2.Driver"/>
            <property name="jakarta.persistence.jdbc.user" value="sa"/>
            <property name="jakarta.persistence.jdbc.password" value=""/>
            <property name="jakarta.persistence.jdbc.url" value="jdbc:h2:tcp://localhost/~/test"/>
            <property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect"/>

            <!-- 옵션 -->
            <property name="hibernate.show_sql" value="true"/>
            <property name="hibernate.format_sql" value="true"/>
            <property name="hibernate.use_sql_comments" value="true"/>
            <property name="hibernate.hbm2ddl.auto" value="create" />

            <!-- =================================================================== -->
            <!-- Hibernate DDL 자동 생성 옵션 (hibernate.hbm2ddl.auto)             -->
            <!-- =================================================================== -->

            <!--
                value="create"
                - 설명: 애플리케이션 실행 시점에 기존 테이블을 모두 삭제(DROP)하고,
                        엔티티를 기반으로 테이블을 새로 생성(CREATE)합니다.
                - 주의사항: 데이터가 모두 사라지므로 개발 초기 단계에서만 사용해야 합니다.
                            운영 서버에서 절대 사용하면 안 됩니다.
            -->

            <!--
                value="create-drop"
                - 설명: create와 동일하게 시작 시 테이블을 새로 생성하지만,
                        애플리케이션이 종료될 때 생성했던 테이블을 모두 삭제(DROP)합니다.
                - 주의사항: 테스트 케이스 실행 등 DB가 완전히 초기화되어야 하는 환경에서 유용합니다.
            -->

            <!--
                value="update"
                - 설명: 애플리케이션 실행 시 엔티티와 테이블을 비교하여,
                        변경된 부분만 스키마에 반영(ALTER)하려고 시도합니다.
                - 주의사항: 컬럼 삭제 등 복잡한 변경은 제대로 반영되지 않을 수 있으며,
                            운영 중인 DB를 의도치 않게 변경할 수 있어 운영 서버에서는 절대 사용하면 안 됩니다.
            -->

            <!--
                value="validate"
                - 설명: 애플리케이션 실행 시 엔티티와 테이블의 스키마 정보가 일치하는지 검증만 합니다.
                        만약 스키마가 다르면 예외를 발생시키고 애플리케이션을 중단시킵니다.
                - 주의사항: 데이터에 영향을 주지 않으므로, 개발 서버나 운영 서버에서 스키마 일치 여부를
                            확인하는 용도로 안전하게 사용할 수 있습니다.
            -->

            <!--
                value="none"
                - 설명: DDL 자동 생성 기능을 사용하지 않습니다.
                - 주의사항: 가장 안전한 옵션입니다. DBA가 별도로 DDL을 관리하는
                            운영 서버에서는 반드시 이 옵션을 사용하거나 속성 자체를 비워둬야 합니다.
            -->
        </properties>
    </persistence-unit>

</persistence>
